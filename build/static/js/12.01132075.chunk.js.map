{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","views/users/UserForm.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_arrayLikeToArray","len","arr2","BasicForms","match","React","useState","useEffect","params","id","fetch","then","response","json","setInputValues","firstName","lastName","password","email","role","sexe","phone","address","institution","inputValues","handleOnChange","event","target","isActive","status","message","alert","setAlert","onSubmit","evt","preventDefault","requestOptions","method","headers","body","JSON","stringify","data","setTimeout","color","closeButton","xs","sm","type","onChange","placeholder","autoComplete","className","adress","custom","selected","size","onClick"],"mappings":"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","file":"static/js/12.01132075.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import React ,{useState, useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CFade,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CValidFeedback,\n  CInvalidFeedback,\n  CTextarea,\n  CInput,\n  CInputFile,\n  CInputCheckbox,\n  CInputRadio,\n  CInputGroup,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdown,\n  CInputGroupText,\n  CLabel,\n  CSelect,\n  CRow,\n  CSwitch,\n  CAlert\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { DocsLink } from 'src/reusable'\n\nconst BasicForms = ({match}) => {\n  //to know if the form is for create (return false) or for edit (return true)\n  const [isEdit, setIsEdit] = React.useState(false);\n  // const { id } = match.params;\n  useEffect(() => {\n   if( match.params.id ){\n    fetch(\"http://localhost:8080/api/users/\"+match.params.id)\n      .then((response) => response.json())\n      .then((json) => setInputValues(json))\n   }\n \n    \n  }, []);\n\n  const [inputValues, setInputValues] = useState({\n    firstName: '', lastName: '', password: '', email: '', role: '1', sexe: '0', phone: '', address: '', institution: ''\n  });\n  \n  const handleOnChange = event => {\n    const { name, value } = event.target;\n    setInputValues({ ...inputValues, [name]: value });\n  };\n  const onReinitialiserInput = () =>{\n    setInputValues({\n      firstName: '', lastName: '', password: '', email: '', role: '1', sexe: '0', phone: '', address: '', institution: ''\n    })\n  }\n\n  const [alert, setAlert] = React.useState({ \n    isActive: false, status: '', message: '',})\n   const handleSubmit = (evt) => {\n      evt.preventDefault();\n      //VALIDATION\n      const requestOptions = {\n        method: match.params.id ?'PUT':'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(inputValues)\n    };\n    //check if it is POST or PUT\n    if(match.params.id){\n      fetch('http://localhost:8080/api/users/'+match.params.id, requestOptions)\n        .then(response => response.json())\n        .then(data =>   setAlert({ ...alert,isActive: true, message: \"Opération réussie !\"}));\n    }else{\n        fetch('http://localhost:8080/api/users/', requestOptions)\n        .then(response => response.json())\n        .then(data =>   setAlert({ ...alert,isActive: true, message: \"Opération réussie !\"}));\n      }\n\n        setTimeout(() => {\n          setAlert({...alert, isActive: false, message:''})\n        }, 4000)\n  }\n\n  return (\n    <>\n          <form onSubmit={handleSubmit}>\n            { alert.isActive ?  <CAlert color=\"info\" closeButton>{alert.message}</CAlert> : ''}\n         \n      <CRow>\n  \n        <CCol xs=\"12\" sm=\"6\">\n        <CCard>\n            <CCardHeader>\n              Informations de l'utilisateur   {  match.params.id}\n            </CCardHeader>\n            <CCardBody>\n              <CForm >\n                <CFormGroup>\n                  <CLabel >Prénom</CLabel>\n                  <CInput type=\"text\" onChange={handleOnChange} value={inputValues.firstName} name=\"firstName\" placeholder=\"Entrer le prénom..\" autoComplete=\"prenom\"/>\n                  <CFormText className=\"help-block\">Veillez entrer le prénom</CFormText>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel >Nom</CLabel>\n                  <CInput type=\"text\" onChange={handleOnChange} value={inputValues.lastName} name=\"lastName\" placeholder=\"Entrer le nom..\" autoComplete=\"nom\"/>\n                  <CFormText className=\"help-block\">Veillez entrer le nom</CFormText>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel >Email</CLabel>\n                  <CInput type=\"email\" onChange={handleOnChange} value={inputValues.email} name=\"email\" placeholder=\"Enter Email..\" autoComplete=\"email\"/>\n                  <CFormText className=\"help-block\">Veillez entrer l'email</CFormText>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel >Télṕhone</CLabel>\n                  <CInput type=\"text\" onChange={handleOnChange} value={inputValues.phone} name=\"phone\" placeholder=\"Entrer le téléphone..\" autoComplete=\"phone\"/>\n                  <CFormText className=\"help-block\">Veillez entrer le téléphone</CFormText>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel >Addresse</CLabel>\n                  <CInput type=\"text\" onChange={handleOnChange} value={inputValues.adress} name=\"adress\" placeholder=\"Entrer l'addresse..\" autoComplete=\"adress\"/>\n                  <CFormText className=\"help-block\">Veillez entrer l'adresse</CFormText>\n                </CFormGroup>\n              \n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" sm=\"6\">\n          <CCard>\n            <CCardHeader>\n            Informations de l'utilisateur\n            </CCardHeader>\n            <CCardBody>\n                <CFormGroup>\n                  <CLabel>Mot de passe</CLabel>\n                  <CInput type=\"password\" onChange={handleOnChange} name=\"password\" placeholder=\"Enter Password..\" autoComplete=\"current-password\"/>\n                  <CFormText className=\"help-block\">Veuillez entre un mot de passe</CFormText>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel>Confirmer mot de passe</CLabel>\n                  <CInput type=\"password\" onChange={handleOnChange} name=\"confirm_password\" placeholder=\"Enter Password..\" autoComplete=\"current-password\"/>\n                  <CFormText className=\"help-block\">Veuillez confirmer le mot de passe</CFormText>\n                </CFormGroup>\n                <CFormGroup>\n                <CLabel>Sexe</CLabel>\n                    <CSelect custom onChange={handleOnChange} name=\"sexe\" >\n                      <option value=\"0\"selected={inputValues.sexe == '0'}>Homme</option>\n                      <option value=\"1\" selected={inputValues.sexe == '1'}>Femme</option>\n                      <option value=\"2\" selected={inputValues.sexe == '2'}>Autre</option>\n                    </CSelect>\n                    <CFormText className=\"help-block\">Choisir le sexe</CFormText>\n                </CFormGroup>\n                <CFormGroup>\n                <CLabel>Rôle</CLabel>\n                    <CSelect custom onChange={handleOnChange} name=\"role\" >\n                      <option value=\"1\">Admin</option>\n                      <option value=\"0\">Super Admin</option>\n                    </CSelect>\n                    <CFormText className=\"help-block\">Choisir le rôle</CFormText>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel>Institution</CLabel>\n                  <CInputGroup>\n                    <CSelect custom onChange={handleOnChange} name=\"institution\" >\n                      <option value=\"0\">URGéo</option>\n                      <option value=\"1\">BME</option>\n                      <option value=\"2\">LNBTP</option>\n                    </CSelect>\n                    <CInputGroupAppend>\n                      <CInputGroupText><CIcon name=\"cil-scrubber\" /></CInputGroupText>\n                    </CInputGroupAppend>\n                  </CInputGroup>\n                </CFormGroup>\n            </CCardBody>\n            <CCardFooter>\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> {match.params.id ? 'Modifier': 'Enregistrer'} </CButton>\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={() => onReinitialiserInput()}><CIcon name=\"cil-ban\" /> Réinitialiser</CButton>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      \n      </CRow>\n      </form>\n     </>\n  )\n}\n\nexport default BasicForms\n"],"sourceRoot":""}
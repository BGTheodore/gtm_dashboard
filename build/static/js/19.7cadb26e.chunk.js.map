{"version":3,"sources":["views/carte/EssaisContext.js","views/carte/SearchTextField.js","views/carte/Search.js","views/carte/Carte/CarteContent.js","views/carte/Carte/index.js"],"names":["CounterContext","createContext","CounterContextProvider","props","useState","essais","setEssais","useEffect","fetch","then","response","json","Provider","value","children","SearchTextField","label","type","options","useField","field","className","Search","useContext","validate","Yup","searchContent","max","required","initialValues","enableReinitialize","validationSchema","onSubmit","values","process","formik","md","name","placeholder","color","CarteContent","MapContainer","style","height","width","center","zoom","scrollWheelZoom","TileLayer","attribution","url","LayersControl","position","BaseLayer","checked","map","essai","Marker","latitude","longitude","Popup","id","institution","nom","sigle","typeEssai","altitude","href","fichier","lien","createdDate","Tooltip","Carte"],"mappings":"iQAIaA,EAAiBC,0BAGjBC,EAAyB,SAAAC,GAAS,MAKjBC,mBAAS,IALQ,mBAKtCC,EALsC,KAK9BC,EAL8B,KAkB7C,OATAC,qBAAU,WACRC,MAAM,oCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUL,EAAUK,QAE3B,IAKD,cAACX,EAAeY,SAAhB,CAAyBC,MAAO,CAACR,EAAQC,GAAzC,SACGH,EAAMW,Y,2GCxBAC,EAAkB,SAAC,GAAqC,EAApCC,MAAoC,EAA7BC,KAA6B,EAAvBC,QAAwB,IAAZf,EAAW,4CAC1CgB,YAAShB,GADiC,mBACzDiB,EADyD,UAGjE,OACI,qBAAKC,UAAU,OAAf,SACI,+CACAA,UAAS,yDAGLD,GAAWjB,OCmEZmB,EA7DA,WAAO,IAAD,EAEuBlB,mBAAS,MAFhC,gCAGSmB,qBAAWvB,IAHpB,mBAGJM,GAHI,WAQbkB,EAAWC,IAAW,CAC1BC,cAAeD,MACdE,IAAI,GAAG,4BACPC,SAAS,uBAEZ,OACE,cAAC,IAAD,CACAC,cAVa,CACbH,cAAe,IAYfI,oBAAkB,EAClBC,iBAAmBP,EACnBQ,SAAU,SAAAC,GAGVzB,MAAM,GAAD,OAAI0B,wBAAJ,uCACAzB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUL,EAAUK,OAX9B,SAeK,SAAAwB,GAAM,OACP,8BACD,cAAC,IAAD,UACD,eAAC,IAAD,WACE,cAAC,IAAD,CAAMd,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMe,GAAG,IAAT,SACE,eAAC,IAAD,CAAaf,UAAU,gBAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOgB,KAAK,6BAGhB,cAAC,EAAD,CAAiBA,KAAK,gBAAgBpB,KAAK,OAAOqB,YAAY,iBAE9D,cAAC,IAAD,UAEE,cAAC,IAAD,CAASC,MAAM,OAAOtB,KAAK,SAA3B,iCAKR,kCC3DS,SAASuB,IAAgB,IAAD,EACTjB,qBAAWvB,GADF,mBAC9BK,EAD8B,UAYvC,OACA,gCACE,cAAC,EAAD,IACG,eAACoC,EAAA,EAAD,CAAcC,MAAO,CAACC,OAAO,OAAQC,MAAM,QAASC,OAAQ,CAAC,SAAU,SAAUC,KAAM,EAAGC,iBAAiB,EAA3G,UACH,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEJ,eAACC,EAAA,EAAD,CAAeC,SAAS,WAAxB,UACA,cAACD,EAAA,EAAcE,UAAf,CAAyBhB,KAAK,8BAA9B,SACE,cAACW,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,0DAGR,cAACC,EAAA,EAAcE,UAAf,CAAyBC,SAAO,EAACjB,KAAK,cAAtC,SACE,cAACW,EAAA,EAAD,CACEC,YAAY,kSACZC,IAAI,uDAGR,cAACC,EAAA,EAAcE,UAAf,CAAyBC,SAAO,EAACjB,KAAK,uBAAtC,SACE,cAACW,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,4DAQR7C,EAAOkD,KAAI,SAAAC,GAAK,OACd,8BACA,eAACC,EAAA,EAAD,CACAL,SAAU,CAACI,EAAMJ,SAASM,SAC1BF,EAAMJ,SAASO,WAFf,UAOK,cAACC,EAAA,EAAD,CACGR,SAAU,CAACI,EAAMJ,SAASM,SAAUF,EAAMJ,SAASO,WADtD,SAGD,gCACQ,6BAAI,8DAA8BH,EAAMK,QACxC,+BACI,+BAAI,oDAAJ,UACA,+BAAI,kDAA8BL,EAAMM,YAAYC,IAApD,KAA2DP,EAAMM,YAAYE,MAA7E,OACA,+BAAI,qDAAJ,IAAqCR,EAAMS,UAAUF,OACrD,+BAAI,+CAAJ,IAAgCP,EAAMJ,SAASM,YAC/C,+BAAI,gDAAJ,IAAiCF,EAAMJ,SAASO,aAChD,+BAAI,+CAAJ,IAAgCH,EAAMJ,SAASc,YAC/C,+BAAI,iDAAJ,UACA,+BAAI,mDAA2B,mBAAGC,KAAMX,EAAMY,QAAQC,KAAvB,8BAC/B,+BAAI,6DAAJ,IAA2Cb,EAAMc,uBAI9D,cAACC,EAAA,EAAD,qCA1BQf,EAAMK,aCnDR,SAASW,IACxB,OACA,cAAC,EAAD,UACI,cAAChC,EAAD","file":"static/js/19.7cadb26e.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\nimport useSwr from 'swr';\n\n// Create Context Object\nexport const CounterContext = createContext();\n\n// Create a provider for components to consume and subscribe to changes\nexport const CounterContextProvider = props => {\n  // const fetcher = (...args) => fetch(...args).then(response => response.json());\n  // const url = \"http://localhost:8080/api/essais\"\n  // const { data, error } = useSwr(url, {fetcher});\n  // const __essais = data && !error ? data.slice(0,100): [];\n  const [essais, setEssais] = useState([]);\n  // setEssais({...essais, __essais})\n\n  // const [data, setData] = useState([])\n  useEffect(() => {\n    fetch('http://localhost:8080/api/essais')\n      .then((response) => response.json())\n      .then((json) => setEssais(json)); \n    \n  }, []);\n\n  // const [count, setCount] = useState(0);\n\n  return (\n    <CounterContext.Provider value={[essais, setEssais]}>\n      {props.children}\n    </CounterContext.Provider>\n  );\n};","import React from 'react';\nimport { ErrorMessage, useField } from 'formik';\n\nexport const SearchTextField = ({label, type, options, ...props}) => {\n    const [ field, meta] = useField(props);\n    // console.log(options)\n    return (\n        <div className=\"mb-2\" >\n            <input \n            className={`form-control shadow-none \n            \n            `}\n            {...field} {...props}\n            />\n            {/* <ErrorMessage component=\"div\" name={field.name} style={{position: \"absolute\", color:\"red\", fontSize: \".6rem\"} }/> */}\n        </div>\n    )\n}","import React ,{useState, useEffect,useContext} from 'react';\nimport {Formik, Form} from 'formik';\nimport * as Yup from 'yup';\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupAppend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\nimport { SearchTextField } from './SearchTextField';\nimport { CounterContext } from \"./EssaisContext\";\n\n\nconst Search = () => {\n\n  const [searchContent, setSearchContent] = useState(null);\n  const [essais, setEssais] = useContext(CounterContext);\n\n  const initVal ={\n    searchContent: ''\n  }\n  const validate = Yup.object({\n    searchContent: Yup.string()\n    .max(45,\"Maximum 45 caractères\")\n    .required(\"Champs obligatire\"),        \n  })\n  return (\n    <Formik\n    initialValues = {\n      initVal\n    }\n    enableReinitialize\n    validationSchema= {validate}\n    onSubmit={values => {\n    //  console.log(values)\n\n    fetch(`${process.env.REACT_APP_API_URL}/api/essais/search?mot_cle=bonsoir`)\n        .then((response) => response.json())\n        .then((json) => setEssais(json)); \n\n    }}\n  >\n       { formik => (\n        <div>\n       <Form>\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"6\">     \n            <CInputGroup className=\"input-prepend\">\n              <CInputGroupPrepend>\n                <CInputGroupText>\n                  <CIcon name=\"cil-magnifying-glass\" />\n                </CInputGroupText>\n              </CInputGroupPrepend>\n              <SearchTextField name=\"searchContent\" type=\"text\" placeholder=\"Mots clés\" />\n              {/* <CInput size=\"16\" name=\"searchContent\" type=\"text\" placeholder=\"Mots clés\" /> */}\n              <CInputGroupAppend>\n              {/* <button className=\"btn btn-dark mt-3\" type=\"submit\">Rechercher</button> */}\n                <CButton color=\"info\" type=\"submit\" >Rechercher</CButton>\n              </CInputGroupAppend>\n            </CInputGroup>\n          </CCol>\n        </CRow>\n        <hr />\n      </CContainer>\n      </Form>  \n      </div>    \n      )\n      }\n      </Formik> \n     \n  )\n}\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport { Tooltip, Marker, Popup, TileLayer, MapContainer, LayersControl } from 'react-leaflet';\n //import {Icon } from 'leaflet';\n\n// import useSwr from 'swr';\nimport Search from '../Search';\nimport { CounterContext } from \"../EssaisContext\";\n\n// const Carte = (props) => {\n  export default function CarteContent() { \n    const [essais, setEssais] = useContext(CounterContext);\n    //const [ activeCrime, setActiveCrime] = React.useState(null);\n  //   const fetcher = (...args) => fetch(...args).then(response => response.json());\n  //   const url = \n  //   \"http://localhost:8080/api/essais\"\n  //   // \"https://data.police.uk/api/crimes-street/all-crime?lat=52.6297296&lng=-1.1315927&date=2019-10\"\n  //  const { data, error } = useSwr(url, {fetcher });\n\n  //  const essais = data && !error ? data.slice(0,100): [];\n\n    const position = [51.505, -0.09]\n  return (\n  <div>\n    <Search />\n       <MapContainer style={{height:'70vh', width:'100%'}} center={[19.0558, -73.0513]} zoom={9} scrollWheelZoom={true}>\n    <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    />\n      <LayersControl position=\"topright\">\n      <LayersControl.BaseLayer name=\"OpenStreetMap.BlackAndWhite\">\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n        />\n      </LayersControl.BaseLayer>\n      <LayersControl.BaseLayer checked name=\"OpenTopoMap\">\n        <TileLayer\n          attribution='Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\n          url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\n        />\n      </LayersControl.BaseLayer>\n      <LayersControl.BaseLayer checked name=\"OpenStreetMap.Mapnik\">\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      </LayersControl.BaseLayer>\n   \n    </LayersControl>\n\n\n\n     {essais.map(essai => (\n        < div key={essai.id} >\n        <Marker\n        position={[essai.position.latitude, \n        essai.position.longitude]}\n        // onClick = {() => {\n        //     alert('okoko')\n        // }}\n        >\n             <Popup \n                position={[essai.position.latitude, essai.position.longitude]}\n                >\n            <div>\n                    <h5><strong>Résultat de l'essai: {essai.id}</strong></h5>\n                    <ul>\n                        <li><strong>Nom du projet:</strong> ...</li>\n                        <li><strong>Institution:</strong>{essai.institution.nom} ({essai.institution.sigle})</li>\n                        <li><strong>Type d\\'essai:</strong> {essai.typeEssai.nom}</li>\n                        <li><strong>Latitude:</strong> {essai.position.latitude}</li>\n                        <li><strong>Longitude:</strong> {essai.position.longitude}</li>\n                        <li><strong>Altitude:</strong> {essai.position.altitude}</li>\n                        <li><strong>Méthode:</strong> ...</li>\n                        <li><strong>Résultat: </strong><a href={essai.fichier.lien}>Voir document</a></li>\n                        <li><strong>Date de réalisation:</strong> {essai.createdDate}</li>\n                    </ul>\n            </div>\n           </Popup>\n           <Tooltip>Tooltip for Marker</Tooltip>\n        </Marker>\n               \n       \n    \n     \n        </div>\n        \n    )\n    )} \n  </MapContainer>\n  </div>\n   \n  )\n}\n\n// export default Carte\n","import React, { useContext } from \"react\";\nimport { CounterContext, CounterContextProvider } from \"../EssaisContext\";\nimport  CarteContent from './CarteContent';\n  export default function Carte() {\n  return (\n  <CounterContextProvider>\n      <CarteContent />\n  </CounterContextProvider>\n   \n  )\n}"],"sourceRoot":""}